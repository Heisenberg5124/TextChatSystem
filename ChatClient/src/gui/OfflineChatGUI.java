/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import client.ChatClient;
import client.MessageListener;
import client.MessageStatusListener;

import javax.swing.*;
import java.awt.event.*;
import java.io.IOException;
import java.util.Map;

/**
 *
 * @author ADMIN
 */
public class OfflineChatGUI extends javax.swing.JFrame {

    private final ChatClient client;
    private final DefaultListModel<String> offlineModel;
    private final String login;

    /**
     * Creates new form OfflineChatGUI
     * @param client
     * @param userListGUI
     */
    public OfflineChatGUI(ChatClient client, UserListGUI userListGUI) {
        initComponents();
        this.client = client;
        this.offlineModel = userListGUI.getOfflineModel();
        this.login = userListGUI.getLogin();

        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        list.setModel(userListGUI.getOfflineModel());
        lbLogin.setText("Login as: " + login);

        client.addMessageListener(new MessageListener() {
            @Override
            public void onMessage(String fromLogin, String toLogin, String msgBody, String isRead) {
                if (toLogin.equals(login)) {
                    offlineModel.clear();
                    Map<String, Integer> offlineMessagesMap = userListGUI.getOfflineMessagesMap();
                    for (String key : offlineMessagesMap.keySet())
                        offlineModel.addElement(String.format("%s (%d)", key, offlineMessagesMap.get(key)));
                }
            }
        });

        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                setVisible(false);
            }
        });

        btnClose.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                setVisible(false);
            }
        });

        btnRead.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                doChat(userListGUI);
            }
        });

        list.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2)
                    doChat(userListGUI);
            }
        });
    }


    private void doChat(UserListGUI userListGUI) {
        String login = list.getSelectedValue();
        int index = list.getSelectedIndex();
        String[] token = login.split(" ", 2);
        login = token[0];

        if (!userListGUI.getOpen().get(login)) {
            userListGUI.getOfflineMessagesMap().remove(login);

            ChatGUI chatGUI = new ChatGUI(client, userListGUI.getLogin(), login, userListGUI.getMessageMap(), userListGUI);
            chatGUI.setVisible(true);
            chatGUI.setLocation(getX() + getWidth(), getY());
            userListGUI.setMessageMap(chatGUI.getMessageMap());
            offlineModel.remove(index);

            try {
                client.openChat(login);
            } catch (IOException e) {
                e.printStackTrace();
            }
            userListGUI.getOpen().replace(login, Boolean.TRUE);
            userListGUI.setTextMessage();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbLogin = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnRead = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        list = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        lbLogin.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbLogin.setText("Login as: ");
        lbLogin.setMaximumSize(new java.awt.Dimension(200, 30));
        lbLogin.setPreferredSize(new java.awt.Dimension(200, 30));
        jPanel1.add(lbLogin);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        btnRead.setText("Read");
        jPanel3.add(btnRead);

        btnClose.setText("Close");
        jPanel3.add(btnClose);

        getContentPane().add(jPanel3, java.awt.BorderLayout.PAGE_END);

        jPanel2.setLayout(new java.awt.BorderLayout());

        list.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jScrollPane1.setViewportView(list);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>

    // Variables declaration - do not modify
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnRead;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbLogin;
    private javax.swing.JList<String> list;
    // End of variables declaration
}
